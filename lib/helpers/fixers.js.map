{"version":3,"sources":["../../../lib/helpers/fixers.js"],"names":["fixString","fixObject","fixNumber","fixUsername","fixPassword","fixEmail","fixPhone","fixId","fixExtend","fixTosAgreement","fixStatusCode","fixContentType","fixFullName","fixPayload","fixPayloadForJSON","fixPayloadForHTML","fixPayloadForDefault","payloadFixTypes","json","html","default","str","force","trim","length","obj","num","username","password","email","indexOf","phone","id","idLength","extend","tos","statusCode","contentType","fullName","payload","JSON","stringify"],"mappings":"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","file":"fixers.js","sourcesContent":["import { idLength } from \"../config\";\r\n\r\n/**\r\n * Yük (bilgayar verisi) düzeltme tipleri\r\n * * Not: *fixPayload içerisinde kullanılır*\r\n */\r\nconst payloadFixTypes = {\r\n    json: fixPayloadForJSON,\r\n    html: fixPayloadForHTML,\r\n    default: fixPayloadForDefault\r\n}\r\n\r\n/**\r\n * Dizgiyi zorlama olmaksızın düzeltme\r\n * @param {string} str Dizgi\r\n * @param {boolean} force Dizgi olmaya zorlanmalı mı (varsayılan false)\r\n * @return {string | boolean} Dizgi düzgün ise kendisi, değilse false veya boş dizgi\r\n */\r\nexport function fixString(str, force = false) {\r\n    return typeof str == 'string' && str.trim().length > 0 ? str.trim() :\r\n        force ? '' : false;\r\n}\r\n\r\n/**\r\n * Objeyii zorlama olmaksızın düzeltme\r\n * @param {string} obj Dizgi\r\n * @param {boolean} force Obje olmaya zorlanmalı mı (varsayılan false)\r\n * @return {string | boolean} Obje düzgün ise kendisi, değilse false veya boş obje\r\n */\r\nexport function fixObject(obj, force = false) {\r\n    return typeof obj == 'object' && obj != null ? obj :\r\n        force ? {} : false;\r\n}\r\n\r\n/**\r\n * Sayı düzeltme\r\n * @param {number} num Sayı\r\n * @return {number | boolean} Sayı düzgün ise kendisi, değilse false\r\n */\r\nexport function fixNumber(num) {\r\n    return typeof num == \"number\" && num > 0 ?\r\n        num : false;\r\n}\r\n\r\n/**\r\n * Kullanıcı adı düzeltmesi\r\n * @param {string} username Kullanıcı adı\r\n * @return {boolean | string} Hata varsa false yoksa kullanıcı adını döndürür\r\n */\r\nexport function fixUsername(username) {\r\n    // const possibleChars = \"abcdefghijklmnopqrstuvwxyz0123456789_-\";\r\n    return typeof username == 'string' && username.trim().length < 15 ?\r\n        username.trim() : false;\r\n}\r\n\r\n/**\r\n * Şifre düzeltmesi\r\n * @param {string} password şifre\r\n * @return {boolean | string} Hata varsa false yoksa şifreyi döndürür\r\n */\r\nexport function fixPassword(password) {\r\n    return typeof password == 'string' && password.trim().length > 0 ?\r\n        password.trim() : false;\r\n}\r\n\r\n/**\r\n * Email düzeltmesi\r\n * @param {string} email Email\r\n * @return {boolean | string} Hata varsa false yoksa emaili döndürür\r\n */\r\nexport function fixEmail(email) {\r\n    return typeof email == 'string' && email.indexOf('@') > -1 ?\r\n        email :\r\n        false;\r\n}\r\n\r\n/**\r\n * Telefon düzeltmesi\r\n * @param {string} phone Telefon\r\n * @return {boolean | string} Hata varsa false yoksa telefonu döndürür\r\n */\r\nexport function fixPhone(phone) {\r\n    return typeof phone == 'string' && phone.trim().length == 10 ?\r\n        phone.trim() :\r\n        false;\r\n}\r\n\r\n/**\r\n * Id düzeltmesi\r\n * @param {string} id Kimlik (id)\r\n * @return {boolean | string} Hata varsa false yoksa id'yi döndürür\r\n */\r\nexport function fixId(id) {\r\n    return typeof id == \"string\" &&\r\n        id.trim().length == idLength ?\r\n        id.trim() :\r\n        false;\r\n}\r\n\r\n/**\r\n * Süre uzatma düzeltmesi\r\n * @param {boolean} extend Süre uzatılsın mı değeri (true, false)\r\n * @return {boolean} Hata varsa false yoksa süre uzatılsın mı değerini döndürür\r\n */\r\nexport function fixExtend(extend) {\r\n    return typeof extend == 'boolean' ?\r\n        extend :\r\n        false;\r\n}\r\n\r\n/**\r\n * Koşul kabulü düzeltmesi\r\n * @param {boolean} tos Koşullar kabul edildi mi değeri (true, false)\r\n * @return {boolean} Hata varsa false yoksa koşullar kabul edilsin mi değerini döndürür\r\n */\r\nexport function fixTosAgreement(tos) {\r\n    return typeof tos == 'boolean' ?\r\n        tos :\r\n        false;\r\n}\r\n\r\n/**\r\n * Durum kodu düzeltmesi\r\n * @param {number} statusCode Durum kodu (200, 404)\r\n * @return {number | boolean} Hata varsa false yoksa durum kodunu döndürür\r\n */\r\nexport function fixStatusCode(statusCode) {\r\n    return typeof statusCode == 'number' ?\r\n        statusCode :\r\n        200;\r\n}\r\n\r\n/**\r\n * İçerik tipi düzeltmesi\r\n * @param {string} contentType İçerik tipi (json, html, css..)\r\n * @return {string | boolean} Hata varsa false yoksa içerik tipini döndürür\r\n */\r\nexport function fixContentType(contentType) {\r\n    return typeof contentType == 'string' ?\r\n        contentType :\r\n        'json';\r\n}\r\n\r\n/**\r\n * Tam isim düzeltmesi\r\n * @param {string} fullName Tam isim\r\n * @return {string | boolean} Hata varsa false yoksa tam döndürür\r\n */\r\nexport function fixFullName(fullName) {\r\n    return typeof fullName == 'string' && fullName.trim().length > 0 ?\r\n        fullName.trim() :\r\n        false;\r\n}\r\n\r\n/**\r\n * Yükü düzeltme\r\n * @param {string} contentType İçerik tipi (json, html, css..) \r\n * @param {object} payload Yük objesi\r\n * @return {string} Yük dizgisi\r\n */\r\nexport function fixPayload(contentType, payload) {\r\n    // İçerik türüne göre yük (bilgisayar) verisi işleme\r\n    return typeof payloadFixTypes[contentType] !== 'undefined' ?\r\n        payloadFixTypes[contentType](payload) :\r\n        payloadFixTypes['default'](payload);\r\n}\r\n\r\n/**\r\n * Yükü JSON için düzeltme\r\n * @param {object} payload Yük objesi\r\n * @return {string} JSON dizgisi\r\n */\r\nexport function fixPayloadForJSON(payload) {\r\n    payload = typeof payload == 'object' ?\r\n        payload : {};\r\n\r\n    return JSON.stringify(payload);\r\n}\r\n\r\n/**\r\n * Yükü HTML için düzeltme\r\n * @param {object} payload Yük objesi\r\n * @return {string} Yük dizgisi\r\n */\r\nexport function fixPayloadForHTML(payload) {\r\n    return typeof payload == 'string' ?\r\n        payload :\r\n        '';\r\n}\r\n\r\n/**\r\n * Yükü varsayılan olarak düzeltme\r\n * @param {object} payload Yük objesi\r\n * @return {string} Yük dizgisi\r\n */\r\nexport function fixPayloadForDefault(payload) {\r\n    return typeof payload !== 'undefined' ?\r\n        payload :\r\n        '';\r\n}"]}